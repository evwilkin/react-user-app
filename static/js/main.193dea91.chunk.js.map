{"version":3,"sources":["components/Table/TableHead.js","components/Table/TableData.js","components/Table/UserEmail.js","components/Table/UserAddress.js","components/Table/UserRow.js","components/Table/TableBody.js","components/Table/UserTable.js","components/User/UserItemHeader/ExpandArrow.js","components/User/UserItemHeader/UserItemHeader.js","components/User/UserItemContainer.js","components/User/ToggleWrapper.js","components/User/UserItem.js","components/User/ShowUser.js","App.js","serviceWorker.js","index.js"],"names":["TableHead","react_default","a","createElement","TableData","props","children","UserEmail","_ref","email","href","concat","UserAddress","state","componentDidMount","_callee","zip","zipLookup","regenerator_default","wrap","_context","prev","next","_this","address","zipcode","substr","zipcodes","lookup","sent","setState","t0","console","log","stop","this","Fragment","street","suite","city","Component","UserRow","_props$user","user","id","name","username","Table_TableData","react_router_dom","to","Table_UserEmail","Table_UserAddress","TableBody","users","map","Table_UserRow","key","UserTable","Table_TableHead","Table_TableBody","ExpandArrow","className","isExpanded","style","marginLeft","UserItemHeader","objKey","obj","isNestedObject","toggle","onClick","UserItemHeader_ExpandArrow","defaultProps","UserItemContainer","isVisible","paddingLeft","ToggleWrapper","toggleVisibility","_this$props","nestedObject","buildNestedTable","User_UserItemHeader_UserItemHeader","User_UserItemContainer","Object","keys","nestedKey","UserItem","n","getKey","Date","now","ToggleWrapper_ToggleWrapper","ShowUser","userId","Number","match","params","filter","idx","UserItem_UserItem","App","data","usersDescendingByName","fetch","json","toConsumableArray","sort","b","name1","toUpperCase","name2","_this2","react_router","exact","path","render","components_Table_UserTable","assign","User_ShowUser","Boolean","window","location","hostname","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"yUAaeA,eAXG,kBAChBC,EAAAC,EAAAC,cAAA,aACEF,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,kBACAF,EAAAC,EAAAC,cAAA,sBACAF,EAAAC,EAAAC,cAAA,oBACAF,EAAAC,EAAAC,cAAA,yBCJSC,EAFG,SAAAC,GAAK,OAAIJ,EAAAC,EAAAC,cAAA,UAAKE,EAAMC,WCOvBC,EANG,SAAAC,GAAA,IAAGC,EAAHD,EAAGC,MAAH,OAAeR,EAAAC,EAAAC,cAAA,KAAGO,KAAI,UAAAC,OAAaF,IAAWA,qBCmCjDG,6MAjCbC,MAAQ,CACNA,OAAO,KAGTC,uCAAoB,SAAAC,IAAA,IAAAC,EAAAC,EAAAJ,EAAA,OAAAK,EAAAhB,EAAAiB,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAEVL,EAAMO,EAAKlB,MAAMmB,QAAQC,QAAQC,OAAO,EAAE,GAFhCN,EAAAE,KAAA,EAGQK,IAASC,OAAOZ,GAHxB,QAGVC,EAHUG,EAAAS,QAKRhB,EAAQI,EAAUJ,MACxBU,EAAKO,SAAS,CAAEjB,WANFO,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAW,GAAAX,EAAA,SAShBY,QAAQC,IAARb,EAAAW,IATgB,yBAAAX,EAAAc,SAAAnB,EAAA,yFAaV,IACAS,EAAYW,KAAK9B,MAAjBmB,QACR,OACEvB,EAAAC,EAAAC,cAACF,EAAAC,EAAMkC,SAAP,KACEnC,EAAAC,EAAAC,cAAA,SAAIqB,EAAQa,QACZpC,EAAAC,EAAAC,cAAA,SAAIqB,EAAQc,OACZrC,EAAAC,EAAAC,cAAA,SAAIqB,EAAQe,KAAMJ,KAAKtB,MAAMA,MAAX,KAAAF,OAAwBwB,KAAKtB,MAAMA,OAAU,KAA/D,IAAsEW,EAAQC,iBAxB5De,qBC8BXC,EA1BC,SAAApC,GAAS,IAAAqC,EACwBrC,EAAMsC,KAA7CC,EADeF,EACfE,GAAIC,EADWH,EACXG,KAAMC,EADKJ,EACLI,SAAUrC,EADLiC,EACKjC,MAAOe,EADZkB,EACYlB,QACnC,OACEvB,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAC4C,EAAD,KACE9C,EAAAC,EAAAC,cAAC6C,EAAA,EAAD,CAAMC,GAAE,IAAAtC,OAAMiC,IACXC,IAGL5C,EAAAC,EAAAC,cAAC4C,EAAD,KACGD,GAEH7C,EAAAC,EAAAC,cAAC4C,EAAD,KACE9C,EAAAC,EAAAC,cAAC+C,EAAD,CAAWzC,MAAOA,KAEpBR,EAAAC,EAAAC,cAAC4C,EAAD,KACE9C,EAAAC,EAAAC,cAACgD,EAAD,CAAa3B,QAASA,OCRf4B,EAZG,SAAA/C,GAAK,OACrBJ,EAAAC,EAAAC,cAAA,aACGE,EAAMgD,MAAMC,IAAI,SAAAX,GACf,OAAO1C,EAAAC,EAAAC,cAACoD,EAAD,CAASZ,KAAMA,EAAMa,IAAKb,EAAKC,SCU7Ba,EAXI,SAAApD,GAAK,OACtBJ,EAAAC,EAAAC,cAAA,aACEF,EAAAC,EAAAC,cAACuD,EAAD,MACAzD,EAAAC,EAAAC,cAACwD,EAAD,CAAWN,MAAOhD,EAAMgD,UCQbO,SAfK,SAAAvD,GAClB,IAAMwD,EAAaxD,EAAMyD,WACrB,kCACA,oBAKJ,OACE7D,EAAAC,EAAAC,cAAA,OAAK0D,UAAU,sBAAsBE,MAL3B,CACVC,WAAY,UAKV/D,EAAAC,EAAAC,cAAA,QAAM0D,UAAWA,OCPjBI,EAAiB,SAAA5D,GAAS,IACtB6D,EAAwC7D,EAAxC6D,OAAQC,EAAgC9D,EAAhC8D,IAAKC,EAA2B/D,EAA3B+D,eAAgBC,EAAWhE,EAAXgE,OAErC,OACEpE,EAAAC,EAAAC,cAAA,OAAK0D,UAAU,yBAAyBS,QAASD,GAG7CD,GACAnE,EAAAC,EAAAC,cAACoE,EAAD,CAAaT,WAAYzD,EAAMyD,aAGjC7D,EAAAC,EAAAC,cAAA,OAAK0D,UAAU,0BACb5D,EAAAC,EAAAC,cAAA,OAAK0D,UAAU,qBACb5D,EAAAC,EAAAC,cAAA,OAAK0D,UAAU,4BACb5D,EAAAC,EAAAC,cAAA,OAAK0D,UAAU,2BACZK,IAIAE,GACDnE,EAAAC,EAAAC,cAAA,OAAK0D,UAAU,wBACZM,EAAID,SAYrBD,EAAeO,aAAe,CAC5BV,YAAY,GAUCG,QCjCAQ,EAdW,SAAApE,GACxB,IACIwD,EAAY,4CAKhB,OAJKxD,EAAMqE,YACTb,GAAa,WAIb5D,EAAAC,EAAAC,cAAA,OAAK0D,UAAWA,EAAWE,MAPjB,CAAEY,YAAa,SAQrBtE,EAAMC,WCNOsE,6MACnB/D,MAAQ,CACNiD,YAAY,KAGde,iBAAmB,WACjBtD,EAAKO,SAAS,CAAEgC,YAAavC,EAAKV,MAAMiD,sFAGjC,IAAAgB,EACiD3C,KAAK9B,MAArD6D,EADDY,EACCZ,OAAQC,EADTW,EACSX,IAAKY,EADdD,EACcC,aAAcC,EAD5BF,EAC4BE,iBACnC,OACE/E,EAAAC,EAAAC,cAAA,OAAK0D,UAAU,mBACb5D,EAAAC,EAAAC,cAAC8E,EAAD,CACEf,OAAQA,EACRC,IAAKA,EACLC,gBAAgB,EAChBC,OAAQlC,KAAK0C,iBACbf,WAAY3B,KAAKtB,MAAMiD,aAEzB7D,EAAAC,EAAAC,cAAC+E,EAAD,CAAmBR,UAAWvC,KAAKtB,MAAMiD,YACrCqB,OAAOC,KAAKL,GAAczB,IAAI,SAAA+B,GAAS,OAAIL,EAAiBD,EAAcM,cArB3C7C,aCAtB8C,mLACT,IAAAR,EACiB3C,KAAK9B,MAAtBsC,EADAmC,EACAnC,KAAMuB,EADNY,EACMZ,OACVqB,EAAI,EACFC,EAAS,oBAAA7E,OAAS8E,KAAKC,MAAd,KAAA/E,OAAuB4E,MA8BtC,OA7B0B,SAApBP,EAAqBb,EAAKD,GAG9B,GAF8C,kBAAhBC,EAAID,GAEd,CAClB,IAAMa,EAAeZ,EAAID,GACzB,OACEjE,EAAAC,EAAAC,cAACwF,EAAD,CACEzB,OAAQA,EACRC,IAAKA,EACLY,aAAcA,EACdC,iBAAkBA,EAClBxB,IAAKgC,MAIT,OACEvF,EAAAC,EAAAC,cAAA,OAAKqD,IAAKgC,IAAU3B,UAAU,mBAC5B5D,EAAAC,EAAAC,cAAC8E,EAAD,CACEf,OAAQA,EACRC,IAAKA,EACLC,gBAAgB,KAORY,CAAiBrC,EAAMuB,UAhCP1B,aC2BvBoD,EA3BE,SAAAvF,GACf,IAAMwF,EAASC,OAAOzF,EAAM0F,MAAMC,OAAOpD,IACnCD,EAAOtC,EAAMgD,MAAM4C,OAAO,SAAAtD,GAAI,OAAIA,EAAKC,KAAOiD,IAAQ,GAE5D,OACE5F,EAAAC,EAAAC,cAAA,OAAK0D,UAAU,mBACb5D,EAAAC,EAAAC,cAAA,MAAI0D,UAAU,SACZ5D,EAAAC,EAAAC,cAAA,MAAI0D,UAAU,YACZ5D,EAAAC,EAAAC,cAAC6C,EAAA,EAAD,CAAMC,GAAG,KACPhD,EAAAC,EAAAC,cAAA,QAAM0D,UAAU,uBADlB,UAMJ5D,EAAAC,EAAAC,cAAA,OAAK0D,UAAU,gCACK,kBAATlB,GAAqBwC,OAAOC,KAAKzC,GAAMW,IAAI,SAACY,EAAQgC,GAAT,OAClDjG,EAAAC,EAAAC,cAACgG,EAAD,CAAUjC,OAAQA,EAAQvB,KAAMA,EAAMa,IAAK0C,iBC2BtCE,6MAxCbvF,MAAQ,CACNwC,MAAO,MAGTvC,uCAAoB,SAAAC,IAAA,IAAAsF,EAAAhD,EAAAiD,EAAA,OAAApF,EAAAhB,EAAAiB,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACCiF,MAAM,6CADP,cACZF,EADYjF,EAAAS,KAAAT,EAAAE,KAAA,EAEE+E,EAAKG,OAFP,OAEZnD,EAFYjC,EAAAS,KAGZyE,EAAwBnB,OAAAsB,EAAA,EAAAtB,CAAI9B,GAAOqD,KAAK,SAACxG,EAAEyG,GAC/C,IAAMC,EAAQ1G,EAAE2C,KAAKgE,cACfC,EAAQH,EAAE9D,KAAKgE,cACrB,OAAQD,EAAQE,EACZ,EACCA,EAAQF,GACN,EACD,IAERrF,EAAKO,SAAS,CAAEuB,MAAOiD,IAZL,wBAAAlF,EAAAc,SAAAnB,8EAeX,IAAAgG,EAAA5E,KACP,OACElC,EAAAC,EAAAC,cAAC6C,EAAA,EAAD,KACE/C,EAAAC,EAAAC,cAAA,OAAK0D,UAAU,OACb5D,EAAAC,EAAAC,cAAC6G,EAAA,EAAD,KACE/G,EAAAC,EAAAC,cAAC6G,EAAA,EAAD,CACEC,OAAK,EACLC,KAAK,IACLC,OAAQ,SAAA9G,GAAK,OAAIJ,EAAAC,EAAAC,cAACiH,EAADjC,OAAAkC,OAAA,GAAehH,EAAf,CAAsBgD,MAAO0D,EAAKlG,MAAMwC,YAE3DpD,EAAAC,EAAAC,cAAC6G,EAAA,EAAD,CACEE,KAAK,OACLC,OAAQ,SAAA9G,GAAK,OAAIJ,EAAAC,EAAAC,cAACmH,EAADnC,OAAAkC,OAAA,GAAchH,EAAd,CAAqBgD,MAAO0D,EAAKlG,MAAMwC,sBAhCpDb,aCKE+E,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAAS3B,MACvB,2DCZN4B,IAASR,OAAOlH,EAAAC,EAAAC,cAACyH,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.193dea91.chunk.js","sourcesContent":["import React from 'react';\n\nconst TableHead = () =>(\n  <thead>\n    <tr>\n      <th>Name</th>\n      <th>Username</th>\n      <th>E-mail</th>\n      <th>Address</th>\n    </tr>\n  </thead>\n);\n\nexport default TableHead;\n","import React from 'react';\n\nconst TableData = props => <td>{props.children}</td>;\n\nexport default TableData;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst UserEmail = ({ email }) => <a href={ `mailto:${email}` }>{email}</a>;\n\nUserEmail.propTypes = {\n  email: PropTypes.string\n}\n\nexport default UserEmail;\n","import React, { Component } from 'react';\nimport zipcodes from 'zipcodes';\nimport PropTypes from 'prop-types';\n\nclass UserAddress extends Component {\n  state = {\n    state: false\n  }\n\n  componentDidMount = async () => {\n    try {\n      const zip = this.props.address.zipcode.substr(0,5);\n      const zipLookup = await zipcodes.lookup(zip);\n      if (zipLookup) {\n        const state = zipLookup.state;\n        this.setState({ state });\n      }\n    } catch (err) {\n      console.log(err);\n    }\n  }\n\n  render () {\n    const { address } = this.props;\n    return (\n      <React.Fragment>\n        <p>{address.street}</p>\n        <p>{address.suite}</p>\n        <p>{address.city}{this.state.state ? `, ${this.state.state}` : null} {address.zipcode}</p>\n      </React.Fragment>\n    );\n  }\n}\n\nUserAddress.propTypes = {\n  address: PropTypes.object\n}\n\nexport default UserAddress;\n","import React from 'react';\nimport TableData from './TableData';\nimport UserEmail from './UserEmail';\nimport UserAddress from './UserAddress';\nimport PropTypes from 'prop-types';\n\nimport { Link } from 'react-router-dom';\n\nconst UserRow = props => {\n  const { id, name, username, email, address } = props.user;\n  return (\n    <tr>\n      <TableData>\n        <Link to={`/${id}`}>\n          {name}\n        </Link>\n      </TableData>\n      <TableData>\n        {username}\n      </TableData>\n      <TableData>\n        <UserEmail email={email} />\n      </TableData>\n      <TableData>\n        <UserAddress address={address} />\n      </TableData>\n    </tr>\n  );\n}\n\nUserRow.propTypes = {\n  user: PropTypes.object\n}\n\nexport default UserRow;\n","import React from 'react';\nimport UserRow from './UserRow';\nimport PropTypes from 'prop-types';\n\nconst TableBody = props => (\n  <tbody>\n    {props.users.map(user => {\n      return <UserRow user={user} key={user.id} />\n    })}\n  </tbody>\n);\n\nTableBody.propTypes = {\n  users: PropTypes.array\n}\n\nexport default TableBody;\n","import React from 'react';\nimport './UserTable.css';\nimport TableHead from './TableHead';\nimport TableBody from './TableBody';\nimport PropTypes from 'prop-types';\n\n const UserTable = props => (\n  <table>\n    <TableHead />\n    <TableBody users={props.users} />\n  </table>\n);\n\nUserTable.propTypes = {\n  users: PropTypes.array\n}\n\nexport default UserTable;\n","import React from 'react';\n\nconst ExpandArrow = props => {\n  const className = (props.isExpanded)\n    ? \"fa fa-angle-right fa-angle-down\"\n    : \"fa fa-angle-right\";\n  const style={\n    marginLeft: '-15px'\n  }\n\n  return (\n    <div className=\"list-view-pf-expand\" style={style}>\n      <span className={className}></span>\n    </div>\n  );\n}\n\nexport default ExpandArrow;\n","import React from 'react';\nimport './UserItemHeader.css';\nimport ExpandArrow from './ExpandArrow';\nimport PropTypes from 'prop-types';\n\nconst UserItemHeader = props => {\n  const { objKey, obj, isNestedObject, toggle } = props;\n\n  return (\n    <div className=\"list-group-item-header\" onClick={toggle}>\n\n      {/* Only show if subitems */}\n      { isNestedObject &&\n        <ExpandArrow isExpanded={props.isExpanded} />\n      }\n\n      <div className=\"list-view-pf-main-info\">\n        <div className=\"list-view-pf-body\">\n          <div className=\"list-view-pf-description\">\n            <div className=\"list-group-item-heading\">\n              {objKey}\n            </div>\n\n            {/*  Only show if no subitems */}\n            { !isNestedObject &&\n              <div className=\"list-group-item-text\">\n                {obj[objKey]}\n              </div>\n            }\n\n          </div>\n        </div>\n      </div>\n\n    </div>\n  )\n};\n\nUserItemHeader.defaultProps = {\n  isExpanded: false\n}\n\nUserItemHeader.propTypes = {\n  isNestedObject: PropTypes.bool,\n  obj: PropTypes.object,\n  objKey: PropTypes.string,\n  toggle: PropTypes.func\n}\n\nexport default UserItemHeader;\n","import React from 'react';\n\nconst UserItemContainer = props => {\n  const style={ paddingLeft: '38px' };\n  let className = \"list-group-item-container container-fluid\";\n  if (!props.isVisible) {\n    className += \" hidden\";\n  }\n\n  return (\n    <div className={className} style={style}>\n      { props.children }\n    </div>\n  )\n}\n\nexport default UserItemContainer;\n","import React, { Component } from 'react';\nimport UserItemHeader from './UserItemHeader/UserItemHeader';\nimport UserItemContainer from './UserItemContainer';\nimport PropTypes from 'prop-types';\n\nexport default class ToggleWrapper extends Component {\n  state = {\n    isExpanded: false\n  }\n\n  toggleVisibility = () => {\n    this.setState({ isExpanded: !this.state.isExpanded })\n  }\n\n  render() {\n    const { objKey, obj, nestedObject, buildNestedTable } = this.props;\n    return (\n      <div className=\"list-group-item\">\n        <UserItemHeader\n          objKey={objKey}\n          obj={obj}\n          isNestedObject={true}\n          toggle={this.toggleVisibility}\n          isExpanded={this.state.isExpanded}\n        />\n        <UserItemContainer isVisible={this.state.isExpanded}>\n          { Object.keys(nestedObject).map(nestedKey => buildNestedTable(nestedObject, nestedKey)) }\n        </UserItemContainer>\n      </div>\n    )\n  }\n}\n\nToggleWrapper.propTypes = {\n  objKey: PropTypes.string,\n  obj: PropTypes.object,\n  nestedObject: PropTypes.object,\n  buildNestedTable: PropTypes.func\n}\n","import React, { Component } from 'react';\nimport ToggleWrapper from './ToggleWrapper';\nimport UserItemHeader from './UserItemHeader/UserItemHeader';\nimport PropTypes from 'prop-types';\n\nexport default class UserItem extends Component {\n  render () {\n    const { user, objKey } = this.props;\n    let n = 0;\n    const getKey = () => `${Date.now()}-${n++}`;\n    const buildNestedTable  = (obj, objKey) => {\n      const isNestedObject = typeof obj[objKey] === 'object';\n\n      if (isNestedObject) {\n        const nestedObject = obj[objKey];\n        return (\n          <ToggleWrapper\n            objKey={objKey}\n            obj={obj}\n            nestedObject={nestedObject}\n            buildNestedTable={buildNestedTable}\n            key={getKey()}\n          />\n        )\n      } else {\n        return (\n          <div key={getKey()} className=\"list-group-item\">\n            <UserItemHeader\n              objKey={objKey}\n              obj={obj}\n              isNestedObject={false}\n            />\n          </div>\n        )\n      }\n    }\n\n    const userItems = buildNestedTable(user, objKey);\n\n    return userItems;\n  }\n}\n\nUserItem.propTypes = {\n  objKey: PropTypes.string,\n  user: PropTypes.object\n}\n","import React from 'react';\nimport UserItem from './UserItem';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nconst ShowUser = props => {\n  const userId = Number(props.match.params.id);\n  const user = props.users.filter(user => user.id === userId)[0];\n\n  return (\n    <div className=\"container-fluid\">\n      <ul className=\"pager\">\n        <li className=\"previous\">\n          <Link to=\"/\">\n            <span className=\"i fa fa-angle-left\"></span>\n            Back\n          </Link>\n        </li>\n      </ul>\n      <div className=\"list-group tree-list-view-pf\">\n        { typeof user === 'object' && Object.keys(user).map((objKey, idx) => (\n          <UserItem objKey={objKey} user={user} key={idx}/>\n        )) }\n      </div>\n    </div>\n  );\n}\n\nShowUser.propTypes = {\n  users: PropTypes.array\n}\n\nexport default ShowUser;\n","import React, { Component } from 'react';\nimport './App.css';\nimport UserTable from './components/Table/UserTable';\nimport ShowUser from './components/User/ShowUser';\n\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\n\nclass App extends Component {\n  state = {\n    users: []\n  }\n\n  componentDidMount = async () => {\n    const data = await fetch('http://jsonplaceholder.typicode.com/users');\n    const users = await data.json();\n    const usersDescendingByName = [...users].sort((a,b) => {\n      const name1 = a.name.toUpperCase();\n      const name2 = b.name.toUpperCase();\n      return (name1 < name2)\n        ? 1\n        : (name2 < name1)\n          ? -1\n          : 0;\n    })\n    this.setState({ users: usersDescendingByName });\n  }\n\n  render() {\n    return (\n      <Router>\n        <div className=\"App\">\n          <Switch>\n            <Route\n              exact\n              path=\"/\"\n              render={props => <UserTable {...props} users={this.state.users}/>}\n            />\n            <Route\n              path=\"/:id\"\n              render={props => <ShowUser {...props} users={this.state.users}/>}\n            />\n          </Switch>\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}